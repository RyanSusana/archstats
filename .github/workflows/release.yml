#on:
#  release:
#    types: [published]
#

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    uses: ./.github/workflows/build.yml
    strategy:
      fail-fast: false
      matrix:
       include:
         - { goos: "freebsd", goarch: "386", runson: "ubuntu-latest"}
         - { goos: "freebsd", goarch: "amd64", runson: "ubuntu-latest"}
         - { goos: "freebsd", goarch: "arm", runson: "ubuntu-latest"}
         - { goos: "linux", goarch: "386", runson: "ubuntu-latest"}
         - { goos: "linux", goarch: "amd64", runson: "ubuntu-latest"}
         - { goos: "linux", goarch: "arm", runson: "ubuntu-latest"}
         - { goos: "linux", goarch: "arm64", runson: "ubuntu-latest"}
         - { goos: "openbsd", goarch: "386", runson: "ubuntu-latest"}
         - { goos: "openbsd", goarch: "amd64", runson: "ubuntu-latest"}
         - { goos: "solaris", goarch: "amd64", runson: "ubuntu-latest"}
         - { goos: "windows", goarch: "386", runson: "ubuntu-latest"}
         - { goos: "windows", goarch: "amd64", runson: "ubuntu-latest"}
         - { goos: "darwin", goarch: "amd64", runson: "macos-latest"}
         - { goos: "darwin", goarch: "arm64", runson: "macos-latest" }
    with:
      goarch: ${{ matrix.goarch }}
      goos: ${{ matrix.goos }}
      package-name: ${{ needs.get-product-version.outputs.pkg-name }}
      product-version: ${{ needs.get-product-version.outputs.product-version }}
      runson: ${{ matrix.runson }}
